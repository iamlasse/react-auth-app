// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Component renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    fetching={false}
    login={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action=""
        style={
          Object {
            "maxWidth": 300,
          }
        }
      >
        <h2
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          Login
        </h2>
        <ForwardRef
          disabled={false}
          inline={false}
          intent="none"
        >
          <ForwardRef
            disabled={false}
            id="username"
            intent="none"
            large={true}
            leftIcon="person"
            onChange={[Function]}
            placeholder="Username"
            round={true}
          />
          <ForwardRef
            disabled={false}
            id="password"
            intent="none"
            large={true}
            leftIcon="lock"
            onChange={[Function]}
            placeholder="Password"
            round={true}
            type="password"
          />
          <div>
            <Blueprint3.Button
              disabled={true}
              fill="true"={true}
              intent="primary"
              large={true}
              loading={false}
              onClick={[Function]}
              style={
                Object {
                  "borderRadius": 50,
                }
              }
            >
              Login
            </Blueprint3.Button>
          </div>
          <span
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginTop": 20,
              }
            }
          >
            Don't have an account?
             
            <Link
              replace={false}
              to="/register"
            >
              Register
            </Link>
          </span>
        </ForwardRef>
      </form>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#efefef",
        "display": "flex",
        "height": "100vh",
        "justifyContent": "center",
        "width": "100vw",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "",
        "children": Array [
          <h2
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Login
          </h2>,
          <ForwardRef
            disabled={false}
            inline={false}
            intent="none"
          >
            <ForwardRef
              disabled={false}
              id="username"
              intent="none"
              large={true}
              leftIcon="person"
              onChange={[Function]}
              placeholder="Username"
              round={true}
            />
            <ForwardRef
              disabled={false}
              id="password"
              intent="none"
              large={true}
              leftIcon="lock"
              onChange={[Function]}
              placeholder="Password"
              round={true}
              type="password"
            />
            <div>
              <Blueprint3.Button
                disabled={true}
                fill="true"={true}
                intent="primary"
                large={true}
                loading={false}
                onClick={[Function]}
                style={
                  Object {
                    "borderRadius": 50,
                  }
                }
              >
                Login
              </Blueprint3.Button>
            </div>
            <span
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "marginTop": 20,
                }
              }
            >
              Don't have an account?
               
              <Link
                replace={false}
                to="/register"
              >
                Register
              </Link>
            </span>
          </ForwardRef>,
        ],
        "style": Object {
          "maxWidth": 300,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login",
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Login",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                disabled={false}
                id="username"
                intent="none"
                large={true}
                leftIcon="person"
                onChange={[Function]}
                placeholder="Username"
                round={true}
              />,
              <ForwardRef
                disabled={false}
                id="password"
                intent="none"
                large={true}
                leftIcon="lock"
                onChange={[Function]}
                placeholder="Password"
                round={true}
                type="password"
              />,
              <div>
                <Blueprint3.Button
                  disabled={true}
                  fill="true"={true}
                  intent="primary"
                  large={true}
                  loading={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "borderRadius": 50,
                    }
                  }
                >
                  Login
                </Blueprint3.Button>
              </div>,
              <span
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "marginTop": 20,
                  }
                }
              >
                Don't have an account?
                 
                <Link
                  replace={false}
                  to="/register"
                >
                  Register
                </Link>
              </span>,
            ],
            "disabled": false,
            "inline": false,
            "intent": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "disabled": false,
                "id": "username",
                "intent": "none",
                "large": true,
                "leftIcon": "person",
                "onChange": [Function],
                "placeholder": "Username",
                "round": true,
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "rules": Array [
                    "
	margin-bottom: 1em;
",
                  ],
                },
                "displayName": "Styled(Blueprint3.InputGroup)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "disabled": false,
                "id": "password",
                "intent": "none",
                "large": true,
                "leftIcon": "lock",
                "onChange": [Function],
                "placeholder": "Password",
                "round": true,
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "rules": Array [
                    "
	margin-bottom: 1em;
",
                  ],
                },
                "displayName": "Styled(Blueprint3.InputGroup)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Blueprint3.Button
                  disabled={true}
                  fill="true"={true}
                  intent="primary"
                  large={true}
                  loading={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "borderRadius": 50,
                    }
                  }
                >
                  Login
                </Blueprint3.Button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Login",
                  "disabled": true,
                  "fill="true"": true,
                  "intent": "primary",
                  "large": true,
                  "loading": false,
                  "onClick": [Function],
                  "style": Object {
                    "borderRadius": 50,
                  },
                },
                "ref": null,
                "rendered": "Login",
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Don't have an account?",
                  " ",
                  <Link
                    replace={false}
                    to="/register"
                  >
                    Register
                  </Link>,
                ],
                "style": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "marginTop": 20,
                },
              },
              "ref": null,
              "rendered": Array [
                "Don't have an account?",
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Register",
                    "replace": false,
                    "to": "/register",
                  },
                  "ref": null,
                  "rendered": "Register",
                  "type": [Function],
                },
              ],
              "type": "span",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
	display: flex;
	justify-content: space-around;
",
              ],
            },
            "displayName": "Styled(Blueprint3.FormGroup)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action=""
          style={
            Object {
              "maxWidth": 300,
            }
          }
        >
          <h2
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Login
          </h2>
          <ForwardRef
            disabled={false}
            inline={false}
            intent="none"
          >
            <ForwardRef
              disabled={false}
              id="username"
              intent="none"
              large={true}
              leftIcon="person"
              onChange={[Function]}
              placeholder="Username"
              round={true}
            />
            <ForwardRef
              disabled={false}
              id="password"
              intent="none"
              large={true}
              leftIcon="lock"
              onChange={[Function]}
              placeholder="Password"
              round={true}
              type="password"
            />
            <div>
              <Blueprint3.Button
                disabled={true}
                fill="true"={true}
                intent="primary"
                large={true}
                loading={false}
                onClick={[Function]}
                style={
                  Object {
                    "borderRadius": 50,
                  }
                }
              >
                Login
              </Blueprint3.Button>
            </div>
            <span
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "marginTop": 20,
                }
              }
            >
              Don't have an account?
               
              <Link
                replace={false}
                to="/register"
              >
                Register
              </Link>
            </span>
          </ForwardRef>
        </form>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#efefef",
          "display": "flex",
          "height": "100vh",
          "justifyContent": "center",
          "width": "100vw",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "",
          "children": Array [
            <h2
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Login
            </h2>,
            <ForwardRef
              disabled={false}
              inline={false}
              intent="none"
            >
              <ForwardRef
                disabled={false}
                id="username"
                intent="none"
                large={true}
                leftIcon="person"
                onChange={[Function]}
                placeholder="Username"
                round={true}
              />
              <ForwardRef
                disabled={false}
                id="password"
                intent="none"
                large={true}
                leftIcon="lock"
                onChange={[Function]}
                placeholder="Password"
                round={true}
                type="password"
              />
              <div>
                <Blueprint3.Button
                  disabled={true}
                  fill="true"={true}
                  intent="primary"
                  large={true}
                  loading={false}
                  onClick={[Function]}
                  style={
                    Object {
                      "borderRadius": 50,
                    }
                  }
                >
                  Login
                </Blueprint3.Button>
              </div>
              <span
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "marginTop": 20,
                  }
                }
              >
                Don't have an account?
                 
                <Link
                  replace={false}
                  to="/register"
                >
                  Register
                </Link>
              </span>
            </ForwardRef>,
          ],
          "style": Object {
            "maxWidth": 300,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Login",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef
                  disabled={false}
                  id="username"
                  intent="none"
                  large={true}
                  leftIcon="person"
                  onChange={[Function]}
                  placeholder="Username"
                  round={true}
                />,
                <ForwardRef
                  disabled={false}
                  id="password"
                  intent="none"
                  large={true}
                  leftIcon="lock"
                  onChange={[Function]}
                  placeholder="Password"
                  round={true}
                  type="password"
                />,
                <div>
                  <Blueprint3.Button
                    disabled={true}
                    fill="true"={true}
                    intent="primary"
                    large={true}
                    loading={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "borderRadius": 50,
                      }
                    }
                  >
                    Login
                  </Blueprint3.Button>
                </div>,
                <span
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "space-between",
                      "marginTop": 20,
                    }
                  }
                >
                  Don't have an account?
                   
                  <Link
                    replace={false}
                    to="/register"
                  >
                    Register
                  </Link>
                </span>,
              ],
              "disabled": false,
              "inline": false,
              "intent": "none",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "disabled": false,
                  "id": "username",
                  "intent": "none",
                  "large": true,
                  "leftIcon": "person",
                  "onChange": [Function],
                  "placeholder": "Username",
                  "round": true,
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "rules": Array [
                      "
	margin-bottom: 1em;
",
                    ],
                  },
                  "displayName": "Styled(Blueprint3.InputGroup)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "disabled": false,
                  "id": "password",
                  "intent": "none",
                  "large": true,
                  "leftIcon": "lock",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "round": true,
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "rules": Array [
                      "
	margin-bottom: 1em;
",
                    ],
                  },
                  "displayName": "Styled(Blueprint3.InputGroup)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Blueprint3.Button
                    disabled={true}
                    fill="true"={true}
                    intent="primary"
                    large={true}
                    loading={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "borderRadius": 50,
                      }
                    }
                  >
                    Login
                  </Blueprint3.Button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Login",
                    "disabled": true,
                    "fill="true"": true,
                    "intent": "primary",
                    "large": true,
                    "loading": false,
                    "onClick": [Function],
                    "style": Object {
                      "borderRadius": 50,
                    },
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Don't have an account?",
                    " ",
                    <Link
                      replace={false}
                      to="/register"
                    >
                      Register
                    </Link>,
                  ],
                  "style": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "marginTop": 20,
                  },
                },
                "ref": null,
                "rendered": Array [
                  "Don't have an account?",
                  " ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Register",
                      "replace": false,
                      "to": "/register",
                    },
                    "ref": null,
                    "rendered": "Register",
                    "type": [Function],
                  },
                ],
                "type": "span",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
	display: flex;
	justify-content: space-around;
",
                ],
              },
              "displayName": "Styled(Blueprint3.FormGroup)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
